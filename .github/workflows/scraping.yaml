on:
  schedule:
    - cron: '05 17,21 * * *'

jobs:
  scraping:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - uses: actions/checkout@v3.3.0

      - name: set user
        run: |
          git config --global user.email "wb@retta.nl"
          git config --global user.name "wijnandb"

      - name: pull latest changes
        run: git pull

      - name: install dependencies
        run: pip install requests bs4 unidecode

      - name: run scraper
        run: python generate_ranking/scraping.py

      - name: Check for new data
        id: check-new-data
        run: |
          git diff --exit-code || echo "changes=yes" >> $GITHUB_ENV
          if [[ "${changes}" == "yes" ]]; then
            echo "::set-output name=has_new_data::true"
          else
            echo "::set-output name=has_new_data::false"
          fi

      - name: stage changed files
        if: steps.check-new-data.outputs.has_new_data == 'true'
        run: git add .

      - name: commit changed files
        if: steps.check-new-data.outputs.has_new_data == 'true'
        run: git commit -m "New results at $(date +'%Y-%m-%dT%H:%M:%S')"

      - name: push code to master
        if: steps.check-new-data.outputs.has_new_data == 'true'
        run: git push origin HEAD:main
        
  processing:
    runs-on: ubuntu-latest
    permissions: write-all
    needs: scraping
    if: needs.scraping.outputs.has_new_data == 'true'
    steps:
      - uses: actions/checkout@v3.3.0

      - name: set user
        run: |
          git config --global user.email "wb@retta.nl"
          git config --global user.name "wijnandb"

      - name: pull latest changes
        run: git pull

      - name: process-points
        run: python generate_ranking/processing.py

      - name: Check for changes in processing
        id: check-processing-changes
        run: |
          git diff --exit-code || echo "processing_changes=yes" >> $GITHUB_ENV
          if [[ "${processing_changes}" == "yes" ]]; then
            echo "::set-output name=has_processing_changes::true"
          else
            echo "::set-output name=has_processing_changes::false"
          fi

      - name: stage changed files
        if: steps.check-processing-changes.outputs.has_processing_changes == 'true'
        run: git add .

      - name: commit changed files
        if: steps.check-processing-changes.outputs.has_processing_changes == 'true'
        run: git commit -m "Points processed at $(date +'%Y-%m-%dT%H:%M:%S')"

      - name: push code to main
        if: steps.check-processing-changes.outputs.has_processing_changes == 'true'
        run: git push origin HEAD:main
